name: Publish images to Docker Hub

on:
  push:
    branches: [ feat/new-ci, develop, release-candidate, main ]
  workflow_dispatch: # manually triggered

env:
  # Dagger
  DAGGER_LOG_FORMAT: plain
  DAGGER_LOG_LEVEL: info
  DAGGER_CACHE_BASE: js-ceramic-ci
  # General
  BRANCH: ${{ github.ref_name }}
  GITHUB_SHA: ${{ github.sha }}
  # Secrets
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  push:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
      -
        name: Checkout pipeline tools
        uses: actions/checkout@v3
        with:
          repository: smrz2001/ceramic-deploy
          token: ${{ secrets.GH_TOKEN }}
          path: pipeline-tools
      -
        name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v1
      -
        name: Set up cache for mainline branches
        # TODO: branch-specific handling
        run: |
          echo "DAGGER_CACHE_TO=type=gha,mode=max,scope=${{ env.DAGGER_CACHE_BASE }}-develop" >> $GITHUB_ENV
          echo "DAGGER_CACHE_FROM=type=gha,scope=${{env.DAGGER_CACHE_BASE}}-develop" >> $GITHUB_ENV
      -
        name: Set env vars on pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "DAGGER_CACHE_TO=type=gha,mode=max,scope=${{env.DAGGER_CACHE_BASE}}-${{github.event.number}}" >> $GITHUB_ENV
          echo "DAGGER_CACHE_FROM=type=gha,scope=${{env.DAGGER_CACHE_BASE}}-develop type=gha,scope=${{env.DAGGER_CACHE_BASE}}-${{github.event.number}}" >> $GITHUB_ENV
      -
        name: Install Dagger
        uses: dagger/dagger-for-github@v3
        with:
          install-only: true
      -
        name: Run tests
        run: |
          dagger project update
          dagger do ci -p pipeline-tools/ci/js-ceramic.cue
      -
        name: Print Buildkitd Logs
        if: ${{ failure() }}
        run: docker logs dagger-buildkitd
